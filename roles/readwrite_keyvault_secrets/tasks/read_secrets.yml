---

##
## update: using a dummy one element loop instead of a set_fact here
##   is semantically equivalent but has the charming advantadge of
##   not producing nasty looking ansible warnings like this:
##
##     >> [WARNING]: The loop variable '_cur_getsec_cfg' is already in
##     >> use. You should set the `loop_var` value in the `loop_control`
##     >> option for the task to something else to avoid variable
##     >> collisions and unexpected behavior.
##

##  - set_fact:
##      _cur_getsec_cfg: "{{ _iter_az_secrets }}"

  - ansible.builtin.include_tasks: read_secret.yml
    loop: "{{ [ _iter_az_secrets ] }}"
    loop_control:
      loop_var: _cur_getsec_cfg


  - block:

        ##
        ## it seems that when reading all secrets, we only get the secret
        ## names/ids plus meta data, not the secret itself, so when
        ## requested we recall this task file recursively to really
        ## get all the secrets
        ##
      - ansible.builtin.include_tasks: read_secret.yml

        loop: "{{ smabot_azure_read_secrets.secrets | dict2items }}"
        loop_control:
          loop_var: _cur_getsec_cfg

        no_log: true

    when: >-
      _iter_az_secrets.value.read_all
      and _iter_az_secrets.value.return_secrets


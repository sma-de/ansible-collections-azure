---

################### <assure py env is prepared> ######################

  - name: create local temp file for requirements file
    ansible.builtin.tempfile:
      state: file
    register: _tmp_tmpfile
    changed_when: false


    ## use the correct version reqfile installed together with collection,
    ## this seems to be more stable than simply always using latest
    ## version from repo
  - name: move requirements file to target
    ansible.builtin.copy:
      src: "{{ smabot_az_secrets_args_normed.requirements_srcpath }}"
      dest: "{{ _tmp_tmpfile.path }}"
    changed_when: false


  - name: install necessary python packages
    ansible.builtin.pip:
      requirements: "{{ _tmp_tmpfile.path }}"


  - name: remove local requirements temp file
    ansible.builtin.file:
      path: "{{ _tmp_tmpfile.path }}"
      state: absent
    changed_when: false


################### <actually reading secrets> ######################

  - set_fact:
      smabot_azure_read_secrets: {}

  - ansible.builtin.include_tasks: read_secrets.yml
    loop: "{{ smabot_az_secrets_args_normed.get_secrets.secrets | dict2items }}"
    loop_control:
      loop_var: _iter_az_secrets


  - name: return read secrets as flat value list as requested
    set_fact:
      smabot_azure_read_secrets: >-
        {{ smabot_azure_read_secrets | combine({'secrets': (
             smabot_azure_read_secrets.secrets | dict2items
             | map(attribute='value') | list), })
        }}
    when: smabot_az_secrets_args_normed.get_secrets.return_list
    no_log: "{{ smabot_az_secrets_args_normed.hide_secrets }}"


################### <writing secrets> #######################

  - ansible.builtin.include_tasks: write_secret.yml
    loop: "{{ smabot_az_secrets_args_normed.set_secrets.secrets | dict2items }}"
    loop_control:
      loop_var: _iter_az_secrets


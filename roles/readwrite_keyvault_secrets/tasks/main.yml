---

  ##
  ## note that this role currently uses a module on the remote system
  ## to access azure meaning it also installs a lot of py modules to
  ## the target which might only be needed here, not really sure yet
  ## if this is the best thing to do
  ##
  ## the seemingly proper alternative would be to create a custom
  ## ansible container image with all needed extras for the ansible
  ## controller and use the controller to interact with azure, but
  ## then we would need to manage that again somewhere
  ##

  ##
  ## smabot_azure_keyvault_secrets_args:
  ##   set_secrets:       # optional
  ##   get_secrets:       # optional
  ##     secrets:         # mandatory
  ##       <secret-key>:  # mandatory
  ##         config:      # direct module passtrhough args, optional
  ##           name:      # optional, defaults to secret-key
  ##     defaults:        # merged into options for all specific secrets, optional
  ##       config:        # direct module passtrhough args, optional
  ##         vault_uri:   # vault to use, mandatory
  ##
  ## authing: there are various auth schemes supported by az modules,
  ##   see docu online, this role in principle does not favor or
  ##   exclude any of them but was practically used / tested only
  ##   with these so far: mod params
  ##

  - smabot.azure.normalize_az_secrets_args:
    register: _tmp_az_secrets_config
    no_log: true

  - set_fact:
      smabot_az_secrets_args_normed: "{{ _tmp_az_secrets_config.normalized }}"
      _tmp_my_tasks_file: "{{ role_path }}/tasks/venv_tasks.yml"
    no_log: true


  - ansible.builtin.include_role:
      name: smabot.base.run_inside_venv
    vars:
      smabot_base_run_inside_venv_cfg:
        tasks: "{{ _tmp_my_tasks_file }}"

##  - debug:
##      var: smabot_azure_read_secrets

